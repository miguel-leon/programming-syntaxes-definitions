{
  "$schema": "../node_modules/spliceation-transmutator.typescript/schema.json",
  "definition": [
    {
      "concurrent": [
        {
          "match": "#.*",
          "class": "comment"
        },
        {
          "match": "(\"\"\"|''')(?:\\\\.|[^])*?\\1",
          "class": "string",
          "multiline": true
        },
        {
          "match": "([\"'])(?:\\\\.|[^\\\\\\n\\r])*?\\1",
          "class": "string",
          "multiline": true,
          "recursion": [
            {
              "match": "\\%[ \\t]*?(?:s|d|f|x|X|c|o|a|u)",
              "class": "format",
              "recursion": true
            }
          ]
        },
        {
          "match": "f([\"'])(?:\\\\.|[^\\\\\\n\\r])*?\\1",
          "class": "string",
          "recursion": [
            {
              "match": "{[^}\\n]*}",
              "class": "interpolation",
              "multiline": true,
              "recursion": true
            },
            {
              "match": "\\%[ \\t]*?(?:s|d|f|x|X|c|o|a|u)",
              "class": "format",
              "recursion": true
            }
          ]
        }   
      ]
    },
    {
      "class": "keyword",
      "match": [
        "and",	
        "as",	
        "assert",
        "break",	
        "class",	
        "continue",	
        "def",	
        "del",
        "elif",	
        "else",
        "except",	
        "False",
        "finally",	
        "for",
        "from",
        "global",
        "if",
        "import",
        "in",
        "is",
        "lambda",
        "None",
        "nonlocal",
        "not",
        "or",
        "pass",
        "raise",
        "return",
        "True",
        "try",
        "while",
        "with",
        "yield"
      ]
    },
    {
      "match": "[a-zA-Z_][a-zA-Z0-9_]*[ \\t]*?(?=\\()",
      "class": "function"
    }
  ]
}
