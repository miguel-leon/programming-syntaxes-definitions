{
  "$schema": "../node_modules/spliceation-transmutator.typescript/schema.json",
  "definition": [
    {
      "concurrent": [
        {
          "match": "#.*",
          "class": "comment"
        },
        {
          "match": "=begin[^]*?=cut",
          "class": "comment",
          "multiline": true
        },
        {
          "match": "(['])(?:\\\\.|[^])*?\\1",
          "class": "string",
          "multiline": true
        },
        {
          "match": "([\\\"]|[\\`])(?:\\\\.|[^])*?\\1",
          "class": "string",
          "multiline": true,
          "recursion": [
            {
              "match": "(?:\\$|\\@|\\%)(?:[a-zA-Z_][a-zA-Z0-9_]*)",
              "class": "interpolation",
              "multiline": true,
              "recursion": true
            }
          ]
        },
        {
          "match": "q(?:w)?([\\\/]|[\\^])(?:\\\\.|[^])*?\\1",
          "class": "string",
          "multiline": true
        },
        {
          "match": "q(?:x|q)?([\\\/]|[\\^])(?:\\\\.|[^])*?\\1",
          "class": "string",
          "multiline": true,
          "recursion": [
            {
              "match": "(?:\\$|\\@|\\%)(?:[a-zA-Z_][a-zA-Z0-9_]*)",
              "class": "interpolation",
              "multiline": true,
              "recursion": true
            }
          ]
        }
      ]
    },
    {
      "class": "keyword",
      "match": [
        "__DATA__",
        "__END__",
        "__FILE__",
        "__LINE__",
        "__PACKAGE__",
        "and",
        "break",
        "case",
        "cmp",
        "continue",
        "CORE",
        "do",
        "die",
        "else",
        "elsif",
        "eq",
        "eval",
        "exp",
        "for",
        "foreach",
        "ge",
        "gt",
        "goto",
        "if",
        "le",
        "lock",
        "lt",
        "ne",
        "next",
        "no",
        "or",
        "package",
        "redo",
        "require",
        "return",
        "select",
        "sub",
        "switch",
        "tr",
        "unless",
        "use",
        "until",
        "while",
        "xor",
        "ARGV",
        "ARGVOUT",
        "STDERR",
        "STDOUT",
        "STDIN",
        "EXTEND"
      ]
    },
    {
      "match": "(?:\\$|\\@|\\%)(?:[a-zA-Z_][a-zA-Z0-9_]*)",
      "class": "variable"
    },  
    {
      "class": "function",
      "match": [
      "abs",
      "accept",
      "alarm",
      "atan2",
      "AUTOLOAD",
      "BEGIN",
      "bind",
      "binmode",
      "bless",
      "caller",
      "chdir",
      "CHECK",
      "chmod",
      "chomp",
      "chop",
      "chown",
      "chr",
      "chroot",
      "close",
      "closedir",
      "connect",
      "cos",
      "crypt",
      "dbmclose",
      "dbmopen",
      "defined",
      "delete",
      "DESTROY",
      "dump",
      "each",
      "END",
      "endgrent",
      "endhostent",
      "endnetent",
      "endprotoent",
      "endpwent",
      "endservent",
      "eof",
      "exec",
      "exists",
      "exit",
      "fcntl",
      "fileno",
      "flock",
      "fork",
      "format",
      "formline",
      "getc",
      "getgrent",
      "getgrgid",
      "getgrnam",
      "gethostbyaddr",
      "gethostbyname",
      "gethostent",
      "getlogin",
      "getnetbyaddr",
      "getnetbyname",
      "getnetent",
      "getpeername",
      "getpgrp",
      "getppid",
      "getpriority",
      "getprotobyname",
      "getprotobynumber",
      "getprotoent",
      "getpwent",
      "getpwnam",
      "getpwuid",
      "getservbyname",
      "getservbyport",
      "getservent",
      "getsockname",
      "getsockopt",
      "glob",
      "gmtime",
      "grep",
      "hex",
      "index",
      "INIT",
      "int",
      "ioctl",
      "join",
      "keys",
      "kill",
      "last",
      "lc",
      "length",
      "link",
      "listen",
      "local(?:time)?",
      "log",
      "lstat",
      "map",
      "mkdir",
      "msgctl",
      "msgget",
      "msgrcv",
      "msgsnd",
      "open",
      "opendir",
      "ord",
      "our",
      "pack",
      "pipe",
      "pop",
      "pos",
      "print",
      "printf",
      "prototype",
      "push",
      "quotemeta",
      "rand",
      "read",
      "readdir",
      "readline",
      "readlink",
      "readpipe",
      "recv",
      "ref",
      "rename",
      "reset",
      "reverse",
      "rewinddir",
      "rindex",
      "rmdir",
      "say",
      "scalar",
      "seek",
      "seekdir",
      "semctl",
      "semget",
      "semop",
      "send",
      "setgrent",
      "sethostent",
      "setnetent",
      "setpgrp",
      "setpriority",
      "setprotoent",
      "setpwent",
      "setservent",
      "setsockopt",
      "shift",
      "shmctl",
      "shmget",
      "shmread",
      "shmwrite",
      "shutdown",
      "sin",
      "sleep",
      "socket",
      "socketpair",
      "sort",
      "splice",
      "split",
      "sprintf",
      "sqrt",
      "srand",
      "stat",
      "state",
      "study",
      "symlink",
      "syscall",
      "sysopen",
      "sysread",
      "sysseek",
      "system",
      "syswrite",
      "tell",
      "telldir",
      "tie",
      "times?",
      "truncate",
      "umask",
      "undef",
      "UNITCHECK",
      "unlink",
      "unpack",
      "unshift",
      "untie",
      "utime",
      "values",
      "vec",
      "wait",
      "wantarray",
      "warn",
      "write"
      ]
    },
    {
      "class": "regexp",
      "match": "qr([\\\/])(?:\\\\.|[^]*)\\1"
    },
    {
      "class": "regexp",
      "match": "\\\/(?=[^\\\/*])(?:\\\\.|\\[(?:\\\\.|[^]\\n\\r])*]|[^\\n\\r])*\\\/(?:d)?(?:g)?(?:i)?(?:m)?(?:s)?(?:u)?(?:y)?"
    }
  ]
}
