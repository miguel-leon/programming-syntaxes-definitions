{
  "$schema": "../node_modules/spliceation-transmutator.typescript/schema.json",
  "definition": [
    {
      "concurrent": [
        {
          "match": "\\/\\/.*",
          "class": "comment"
        },
        {
          "match": "\\/\\*[^]*?\\*\\/",
          "class": "comment",
          "multiline": true
        },
        {
          "match": "([\"']).*?(?<!\\\\)(?:\\\\\\\\)*\\1",
          "class": "string"
        },
        {
          "match": "`(?:\\${(?:{(?:{(?:{(?:{(?:{(?:{(?:{[^}]*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^`])*(?<!\\\\)(?:\\\\\\\\)*`",
          "class": "string",
          "multiline": true,
          "recursion": [
            {
              "match": "\\${(?:{(?:{(?:{(?:{(?:{(?:{(?:{[^}]*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}",
              "class": "interpolation",
              "multiline": true,
              "recursion": true
            }
          ]
        }
      ]
    },
    {
      "class": "keyword",
      "match": [
        "arguments",
        "await",
        "break",
        "case",
        "catch",
        "class",
        "const",
        "continue",
        "debugger",
        "default",
        "delete",
        "do",
        "else",
        "enum",
        "eval",
        "export",
        "extends",
        "false",
        "finally",
        "for",
        "function",
        "if",
        "implements",
        "import",
        "in",
        "instanceof",
        "interface",
        "let",
        "new",
        "null",
        "package",
        "private",
        "protected",
        "public",
        "return",
        "static",
        "super",
        "switch",
        "this",
        "throw",
        "true",
        "try",
        "typeof",
        "var",
        "void",
        "while",
        "with",
        "yield"
      ]
    }
  ]
}
