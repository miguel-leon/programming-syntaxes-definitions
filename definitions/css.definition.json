{
  "$schema": "../node_modules/spliceation-transmutator.typescript/schema.json",
  "definition": [
    {
      "match": "@(?:media|supports)[^{]*{(?:{(?:{(?:{(?:{(?:{(?:{(?:{[^}]*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}",
      "recursion": [
        {
          "class": "identifier",
          "match": "^@[\\w-]+"
        },
        {
          "match": "^[^{]*{",
          "recursion": [
            {
              "match": "\\/\\*[^]*?\\*\\/",
              "class": "comment",
              "multiline": true
            }
          ]
        },
        {
          "match": "}$"
        },
        {
          "match": "[^]*",
          "recursion": true
        }
      ]
    },
    {
      "match": "@keyframes[^{]*{(?:{(?:{(?:{(?:{(?:{(?:{(?:{[^}]*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}",
      "recursion": [
        {
          "class": "identifier",
          "match": "^@[\\w-]+"
        },
        {
          "match": "^[^{]*{",
          "recursion": [
            {
              "match": "\\/\\*[^]*?\\*\\/",
              "class": "comment",
              "multiline": true
            }
          ]
        },
        {
          "match": "}$"
        },
        {
          "match": "{(?:{(?:{(?:{(?:{(?:{(?:{(?:{[^}]*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}",
          "recursion": true
        },
        {
          "match": "\\/\\*[^]*?\\*\\/",
          "class": "comment",
          "multiline": true
        }
      ]
    },
    {
      "match": "@[\\w-]+[^;{]*(?=[{;])",
      "recursion": [
        {
          "class": "identifier",
          "match": "^@[\\w-]+"
        },
        {
          "concurrent": [
            {
              "class": "string",
              "match": "([\"'])(?:\\\\.|[^])*?\\1"
            },
            {
              "match": "\\/\\*[^]*?\\*\\/",
              "class": "comment",
              "multiline": true
            }
          ]
        },
        {
          "class": "function",
          "match": "(?:[\\w-])+(?=\\()"
        }
      ]
    },
    {
      "match": "{(?:{(?:{(?:{(?:{(?:{(?:{(?:{[^}]*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}|[^}])*}",
      "recursion": [
        {
          "class": "spaces",
          "match": "^\\s+"
        },
        {
          "class": "property",
          "match": "^[^:]+(?=:)"
        },
        {
          "class": "fuck",
          "match": ":[^;}]+",
          "recursion": [
            {
              "match": "^:\\s*"
            },
            {
              "match": "\\s*$"
            },
            {
              "class": "value",
              "match": "^(?:([\"'])(?:\\\\.|[^])*?\\1|[^])+",
              "multiline": true,
              "recursion": [
                {
                  "concurrent": [
                    {
                      "class": "string",
                      "match": "([\"'])(?:\\\\.|[^])*?\\1"
                    },
                    {
                      "match": "\\/\\*[^]*?\\*\\/",
                      "class": "comment",
                      "multiline": true
                    }
                  ]
                },
                {
                  "class": "function",
                  "match": "(?:[\\w-])+(?=\\()"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "match": "\\/\\*[^]*?\\*\\/",
      "class": "comment",
      "multiline": true
    }
  ]
}
